SELECT * FROM BIT_DB.customers LIMIT 20;
SELECT * FROM BIT_DB.JanSales LIMIT 20;

--how many orders were placed in january?
SELECT COUNT(orderID) FROM BIT_DB.JanSales;

--how many of those orders were for an iphone?
SELECT COUNT(orderID) FROM BIT_DB.JanSales WHERE Product="iPhone";

--Select the customer account numbers for all the orders that were placed in February
SELECT acctnum FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=Feb.orderID;

--which product was the cheapeast one sold in January, what was the price?
SELECT distinct product, price 
FROM BIT_DB.JanSales
WHERE price
IN (SELECT min(price) FROM BIT_DB.JanSales);

--or:
SELECT distinct product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;

--what is the total revenue for each product sold in January?
SELECT SUM(Quantity)*price AS revenue, product
FROM BIT_DB.JanSales
GROUP BY product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT SUM(Quantity), product, SUM(Quantity)*price AS revenue, product
FROM BIT_DB.FebSales
WHERE location="548 Lincoln St, Seattle, WA 98101";

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers
SELECT COUNT (cust.acctnum), AVG(Quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid=cust.order_id
WHERE Feb.Quantity >2;

SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate BETWEEN '02/13/19 00:00' AND '02/18/19 00:00';

SELECT location
FROM BIT_DB.FebSales
WHERE orderdate = '02/18/19 01:35';

SELECT SUM(Quantity)
FROM BIT_DB.FebSales
WHERE orderdate LIKE '02/18/19%';

SELECT orderdate
FROM BIT_DB.FebSales;

SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product LIKE '%Batteries%';

SELECT distinct Product, Price
FROM BIT_DB.FebSales
WHERE Price LIKE '%.99';

--List all the products sold in Los Angeles in February, and include how many of each were sold.
;SELECT distinct SUM(Quantity), Product, location
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
GROUP BY location
HAVING count(orderID)>2;

--How many of each type of headphone were sold in February?
SELECT distinct Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE Product LIKE '%headphone%'
GROUP BY Product;
--or
SELECT SUM(Quantity) as quantity, Product
FROM BIT_DB.FebSales
WHERE Product LIKE '%Headphones%'
GROUP BY Product;

--What was the average amount spent per account in February?
SELECT AVG(Quantity*price), COUNT(acctnum)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON cust.order_id=feb.orderID;

--What was the average quantity of products purchased per account in February?
SELECT AVG(Quantity), COUNT(acctnum)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON cust.order_id=feb.orderID;

--or
SELECT SUM(Quantity)/COUNT(cust.acctnum)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID=cust.order_id;

--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT SUM(Quantity*price), Product
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY SUM(Quantity*price) DESC
LIMIT 1;
